definitions:
  domain.Client:
    description: Modelo completo de cliente
    properties:
      email:
        type: string
      id:
        type: integer
      last_login:
        type: string
      name:
        type: string
      phone:
        type: string
      role:
        $ref: '#/definitions/domain.Role'
    type: object
  domain.Message:
    description: Estrutura completa de mensagem com metadados
    properties:
      content:
        example: Olá, como posso ajudar?
        type: string
      created_at:
        example: "2023-01-01T00:00:00Z"
        type: string
      id:
        example: 1
        type: integer
      receiver_id:
        example: 2
        type: integer
      receiver_type:
        enum:
        - client
        - professional
        example: professional
        type: string
      sender_id:
        example: 1
        type: integer
      sender_type:
        enum:
        - client
        - professional
        example: client
        type: string
      timestamp:
        example: "2023-01-01T15:04:05Z"
        type: string
      updated_at:
        example: "2023-01-01T00:00:00Z"
        type: string
    type: object
  domain.Professional:
    description: Modelo completo de profissional
    properties:
      created_at:
        type: string
      email:
        type: string
      experience:
        type: integer
      id:
        type: integer
      name:
        type: string
      profession:
        type: string
      rating:
        type: number
      updated_at:
        type: string
      verified:
        type: boolean
    type: object
  domain.Role:
    enum:
    - client
    - professional
    type: string
    x-enum-varnames:
    - RoleClient
    - RoleProfessional
  httpa.LoginResponse:
    description: Retorno do endpoint de login contendo o token JWT
    properties:
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...
        type: string
    type: object
  httpa.RegisterRequest:
    description: Dados necessários para registrar um novo cliente
    properties:
      email:
        example: cliente@example.com
        type: string
      name:
        example: João Silva
        type: string
      password:
        example: senhaSegura123
        type: string
      phone:
        example: "+5511999999999"
        type: string
    type: object
  internal_client_delivery_httpa.LoginRequest:
    description: Credenciais para autenticação do cliente
    properties:
      email:
        example: cliente@example.com
        type: string
      password:
        example: senhaSegura123
        type: string
    type: object
  internal_professional_delivery_httpa.LoginRequest:
    description: Credenciais para login de profissional
    properties:
      email:
        example: professional@example.com
        type: string
      password:
        example: sua_senha_secreta
        type: string
    type: object
info:
  contact: {}
  title: 1Mao API
  version: "1.0"
paths:
  /chat/messages:
    get:
      description: Retorna o histórico de mensagens entre usuários
      parameters:
      - description: ID do remetente
        example: 1
        in: query
        name: sender_id
        required: true
        type: integer
      - description: Tipo do remetente
        enum:
        - client
        - professional
        in: query
        name: sender_type
        required: true
        type: string
      - description: ID do destinatário
        example: 2
        in: query
        name: receiver_id
        required: true
        type: integer
      - description: Tipo do destinatário
        enum:
        - client
        - professional
        in: query
        name: receiver_type
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Message'
            type: array
      summary: Buscar mensagens de chat
      tags:
      - Chat
  /client/login:
    post:
      consumes:
      - application/json
      description: Autentica um cliente e retorna token JWT
      parameters:
      - description: Credenciais de login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_client_delivery_httpa.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/httpa.LoginResponse'
        "400":
          description: Requisição inválida
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Credenciais inválidas
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login de cliente
      tags:
      - Auth
  /client/me:
    get:
      description: Retorna os dados do cliente autenticado
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Client'
        "401":
          description: Não autorizado
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Obter perfil do cliente
      tags:
      - Clients
  /client/register:
    post:
      consumes:
      - application/json
      description: Cria uma nova conta de cliente
      parameters:
      - description: Dados do cliente
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/httpa.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Client'
        "400":
          description: Dados inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Registrar novo cliente
      tags:
      - Clients
  /professional/{id}:
    get:
      description: Retorna os detalhes de um profissional específico
      parameters:
      - description: ID do profissional
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Professional'
        "400":
          description: ID inválido
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Profissional não encontrado
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Obter profissional por ID
      tags:
      - Professionals
  /professional/login:
    post:
      consumes:
      - application/json
      description: Autentica um profissional e retorna um token JWT
      parameters:
      - description: Credenciais de login
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/internal_professional_delivery_httpa.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login de profissional
      tags:
      - Auth
  /professional/register:
    post:
      consumes:
      - application/json
      description: Cria uma nova conta de profissional
      parameters:
      - description: Dados do profissional
        in: body
        name: professional
        required: true
        schema:
          $ref: '#/definitions/domain.Professional'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Professional'
        "400":
          description: Dados inválidos
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Erro interno
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Registrar novo profissional
      tags:
      - Professionals
  /professionals:
    get:
      description: Retorna uma lista com todos os profissionais cadastrados
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Professional'
            type: array
        "500":
          description: Erro interno
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Listar todos os profissionais
      tags:
      - Professionals
swagger: "2.0"
